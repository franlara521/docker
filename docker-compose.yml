version: "3"
services:

## NGINX Proxy manager to control the access through browsers from Internet
  loadbalancer:
    container_name: nginx-proxy
    image: 'jc21/nginx-proxy-manager:latest'
    restart: always
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port:
      - '81:81'
    environment:
      # These are the settings to access your db
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # If you would rather use Sqlite uncomment this
      # and remove all DB_MYSQL_* lines above
      # DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - ~/docker/proxy/data:/data
      - ~/docker/proxy/letsencrypt:/etc/letsencrypt
    depends_on:
      - db

## Database used by proxy manager
  # db:
  #   container_name: database
  #   image: 'jc21/mariadb-aria:latest'
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'npm'
  #     MYSQL_DATABASE: 'npm'
  #     MYSQL_USER: 'npm'
  #     MYSQL_PASSWORD: 'npm'
  #   volumes:
  #     - ~/docker/db/data/mysql:/var/lib/mysql

## Pihole container to block the ads in browser
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8089:80/tcp"
    environment:
      TZ: 'Europe/Madrid'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

## Proxy to cache webcontent and serve it to devices in the network
  squid-proxy:
    container_name: squid
    image: sameersbn/squid:3.5.27-2
    ports:
      - "3128:3128"
    volumes:
      - ~/docker/squid/cache:/var/spool/squid
    restart: always

## To collect metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring_prometheus
    restart: unless-stopped
    volumes:
      - ~/docker/prometheus/config:/etc/prometheus/
      - ~/docker/prometheus/data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter

## Exporter to get the metrics from the containers
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100

## Get the latest stats from docker
  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080

## Interface to show the collected metrics 
  grafana:
    image: grafana/grafana:latest
    container_name: monitoring_grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    volumes:
      - ~/docker/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORT
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=franlab.es
## Duck DNS updates
  dydns:
    image: linuxserver/duckdns
    container_name: duckdns
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - SUBDOMAINS=ejemplo1
      - TOKEN=f1641121-279c-445a-a052-af47f31815df

## Bitwarden
  bitwarden:
    image: bitwardenrs/server
    container_name: bitwarden
    restart: unless-stopped
    volumes:
      - ~/docker/bitwarden/bw-data:/data/
    ports:
      - "8085:80"
